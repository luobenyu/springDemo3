<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans.xsd
       					   http://www.springframework.org/schema/context 
       					   http://www.springframework.org/schema/context/spring-context.xsd
       					   http://www.springframework.org/schema/aop 
       					   http://www.springframework.org/schema/aop/spring-aop.xsd
       					   http://www.springframework.org/schema/tx 
       					   http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 1 service层 -->
	<bean id="userService" class="cn.tf.service.impl.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
	</bean>
	<!-- 2 dao 层 -->
	<bean id="userDao" class="cn.tf.dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 3.1 加载properties配置文件 -->
	<context:property-placeholder location="classpath:jdbcInfo.properties"/>
	<!-- 3.2 数据源（c3p0）-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 4 session工厂 
		* LocalSessionFactoryBean 特殊bean生成 SessionFactory
	-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

		<!-- 4.1 配置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 4.2 hibernate 特有设置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations" value="classpath:cn/tf/*"></property>
	</bean>
	
	<!-- 5 事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 5.2 事务详情 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*"/>
			<tx:method name="update*"/>
			<tx:method name="delete*"/>
			<tx:method name="find*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 5.3 aop 事务通知 应用 切入点 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.tf.service..*.*(..))"/>
	</aop:config>

	<bean id="userAction"  class="cn.tf.action.UserAction"  scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>

	
	
	<!-- 
		<bean  id="userService"  class="cn.tf.service.impl.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
	</bean>
	<bean id="userDao"  class="cn.tf.dao.impl.UserDaoImpl">
		<property name="hibernateTemplate"  ref="hibernateTemplate"></property>
	</bean>
	
	<bean id="hibernateTemplate"  class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory"  ref="sessionFactory"></property>
	</bean>
	
	session工厂 ,特殊的bean生成SessionFactory加载配置文件
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocations"  value="classpath:hibernate.cfg.xml"></property>
	</bean>

	事务管理
	<bean id="txManager"  class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory"  ref="sessionFactory"></property>
	</bean>
	
	 事务详情 
	<tx:advice  id="txAdvice"  transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*"/>
			<tx:method name="update*"/>
			<tx:method name="delete*"/>
			<tx:method name="find*"  read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.tf.service..*.*(..))"/>
	</aop:config>  -->

</beans>